<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.l1.dao.PurchaseDao">

	<resultMap type="Purchase" id="PurchaseResult">
		<result property="id" column="id" />
		<result property="billNo" column="billNo" />
		<result property="billDate" column="billDate" />
		<result property="total" column="total" />

		<result property="surplierId" column="surplierId" />
		<result property="surplierName" column="surplierName" />
		<result property="warehouseId" column="warehouseId" />
		<result property="warehouseName" column="warehouseName" />
		
		<result property="makerId" column="makerId" />
		<result property="makerName" column="makerName" />

		<result property="stat" column="stat" />
		<result property="statName" column="statName" />

		<result property="create_by" column="create_by" />
		<result property="create_time" column="create_time" />
		<result property="update_by" column="update_by" />
		<result property="update_time" column="update_time" />
	</resultMap>

	<insert id="save" parameterType="Purchase" useGeneratedKeys="true" keyProperty="id">
		insert into
		tb_purchase(id,billNo,billDate,total,supplierId,supplierName,warehouseId,warehouseName,
		stat,statName,create_time,create_by,update_by,update_time,makerName,makerId)
		values(null,#{billNo},#{billDate},#{total},#{supplierId},#{supplierName},#{warehouseId},#{warehouseName},
		#{stat},#{statName},#{create_time},#{create_by},#{update_by},#{update_time},#{makerName},#{makerId})
	</insert>

	<update id="update" parameterType="Purchase">
		update tb_purchase
		<set>
			<if test="billNo!=null and billNo!='' ">
				billNo=#{billNo},
			</if>
			<if test="billDate !=null">
				billDate=#{billDate},
			</if>
			<if test="total !=null">
				total=#{total},
			</if>
			
			<if test="supplierId !=null">
				supplierId=#{supplierId},
			</if>

			<if test="supplierName !=null">
				supplierName=#{supplierName},
			</if>
			
			<if test="warehouseId!=null and warehouseId!='' ">
				warehouseId=#{warehouseId},
			</if>
			<if test="warehouseName!=null and warehouseName!='' ">
				warehouseName=#{warehouseName},
			</if>
			<if test="stat!=null and stat!='' ">
				stat=#{stat},
			</if>
			<if test="statName!=null and statName!='' ">
				statName=#{statName},
			</if>
			<if test="makerName !=null">
				makerName=#{makerName},
			</if>
			<if test="makerId !=null">
				makerId=#{makerId},
			</if>
			<if test="update_time !=null">
				update_time=#{update_time},
			</if>
			<if test="create_time !=null">
				create_time=#{create_time},
			</if>
			<if test="update_by !=null">
				update_by=#{update_by},
			</if>
			<if test="create_by !=null">
				create_by=#{create_by},
			</if>
		
		</set>
		where id=#{id}
	</update>

	<select id="find" parameterType="Map" resultMap="PurchaseResult">
		SELECT p.billDate,p.billNo,p.id,p.stat,s.name AS statName,p.supplierId,ss.supplierName,p.total,p.warehouseId,w.name AS warehouseName 
		FROM tb_purchase p 
		LEFT JOIN tb_billstat s ON p.stat=s.id 
		LEFT JOIN tb_supplier ss ON  p.supplierId = ss.id 
		LEFT JOIN tb_warehouse w ON p.warehouseId= w.id
		<where>
			<if test="supplierName !=null and supplierName !='' ">
				and supplierName like #{supplierName}
			</if>
			
			<if test="billNo !=null and billNo !='' ">
				and billNo like #{billNo}
			</if>
			
			<if test="stat!=null and stat!='' ">
				and stat=#{stat}
			</if>
		</where>
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>

	<select id="findByIds" resultMap="PurchaseResult">
		select *
		from tb_purchase where id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="findById" parameterType="int" resultMap="PurchaseResult">
		select *
		from tb_purchase
		where id =#{id}
	</select>
	
	<select id="getTotal" parameterType="Map" resultType="Long">
		select count(*) from tb_purchase
		<where>
			<if test="id!=null and id>0">
				and id = #{id}
			</if>
		</where>
	</select>

	<delete id="delete">
		DELETE FROM tb_purchase where id IN
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<delete id="deleteById" parameterType="int">
		DELETE FROM tb_purchase where
		id=#{id}
	</delete>

	<update id="finish">
        UPDATE tb_purchase set stat = 1 WHERE id IN
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    
    <update id="unfinish">
        UPDATE tb_purchase set stat = 0 WHERE id IN
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    
</mapper> 